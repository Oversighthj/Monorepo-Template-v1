package com.example.app.controller;

import com.example.app.api.DefaultApi;
import com.example.app.model.FeatureDTO;
import org.openapitools.model.UserDTO;
import com.example.app.service.UserService;
import java.util.List;
import org.springframework.http.ResponseEntity;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestBody;
import jakarta.validation.Valid;

/** Simple implementation of the interface generated by OpenAPI for demonstration. */
@RestController
public class FeatureController implements DefaultApi {
  private final UserService userService;

  public FeatureController(UserService userService) {
    this.userService = userService;
  }

  @Override
  public ResponseEntity<List<FeatureDTO>> featureGet() {
    FeatureDTO sample = new FeatureDTO().id(1L).name("Sample feature");
    return ResponseEntity.ok(List.of(sample));
  }

  @Override
  public ResponseEntity<String> statusGet() {
    return ResponseEntity.ok("alive");
  }

  @Override
  public ResponseEntity<List<UserDTO>> usersGet() {
    return ResponseEntity.ok(userService.findAll());
  }

  @Override
  public ResponseEntity<UserDTO> usersPost(@Valid @RequestBody UserDTO userDTO) {
    UserDTO created = userService.create(userDTO);
    return ResponseEntity.status(HttpStatus.CREATED).body(created);
  }
}
