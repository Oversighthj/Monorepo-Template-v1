openapi: 3.0.3
info:
  title: Template API
  version: "1.0"
  description: |
    Unified backend for Template API (Spring Boot) + Flutter client.

servers:
  - url: http://localhost:8080/api
    description: Local dev

# تم تضمين المسارات الجديدة فقط (/feature و /status) في الوثيقة
paths:
  /feature:
    get:
      summary: "Get feature list"
      description: "Returns a list of features."
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureDTO'
              example:
                - id: 1
                  name: "Sample feature"
  # مسار اختياري لفحص حالة التطبيق
  /status:
    get:
      summary: "Status check"
      description: "Returns 'alive' to indicate service is running."
      responses:
        '200':
          description: "Success"
          content:
            text/plain:
              schema:
                type: string
              example: "alive"
  /users:
    get:
      summary: "Get user list"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
    post:
      summary: "Create user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '201':
          description: "Created"
  /properties:
    post:
      summary: "Create property"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDTO'
      responses:
        '201':
          description: "Created"
    get:
      summary: "Get property list"
      parameters:
        - name: ownerId
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyDTO'
  /properties/{id}:
    get:
      summary: "Get property"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDTO'
    put:
      summary: "Update property"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDTO'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyDTO'
    delete:
      summary: "Delete property"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: "Deleted"
components:
  schemas:
    FeatureDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        role:
          $ref: '#/components/schemas/UserRole'
        email:
          type: string
          format: email
        passwordHash:
          type: string
      required:
        - role
        - email
        - passwordHash
    PropertyDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        ownerId:
          type: integer
          format: int64
        active:
          type: boolean
    UserRole:
      type: string
      enum:
        - GUEST
        - ADMIN
        - CLEANER
